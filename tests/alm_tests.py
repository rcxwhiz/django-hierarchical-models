from django.test import TestCase

from tests.models import NSMTestModel


class NSMTests(TestCase):
    def test_child_from_right(self):
        n1 = NSMTestModel.objects.create(num=1)
        self.assertEqual(n1._left, 0)
        self.assertEqual(n1._right, 1)
        n2 = NSMTestModel.objects.create(num=2)
        self.assertEqual(n1._left, 0)
        self.assertEqual(n1._right, 1)
        self.assertEqual(n2._left, 2)
        self.assertEqual(n2._right, 3)
        n3 = NSMTestModel.objects.create(num=3)
        self.assertEqual(n1._left, 0)
        self.assertEqual(n1._right, 1)
        self.assertEqual(n2._left, 2)
        self.assertEqual(n2._right, 3)
        self.assertEqual(n3._left, 4)
        self.assertEqual(n3._right, 5)
        n3.set_parent(n2)
        self.assertEqual(n1._left, 0)
        self.assertEqual(n1._right, 1)
        self.assertEqual(n2._left, 2)
        self.assertEqual(n2._right, 5)
        self.assertEqual(n3._left, 3)
        self.assertEqual(n3._right, 4)
        n2.set_parent(n1)
        self.assertEqual(n1._left, 0)
        self.assertEqual(n1._right, 5)
        self.assertEqual(n2._left, 1)
        self.assertEqual(n2._right, 4)
        self.assertEqual(n3._left, 2)
        self.assertEqual(n3._right, 3)

    def test_child_from_left(self):
        n1 = NSMTestModel.objects.create(num=1)
        self.assertEqual(n1._left, 0)
        self.assertEqual(n1._right, 1)
        n2 = NSMTestModel.objects.create(num=2)
        self.assertEqual(n1._left, 0)
        self.assertEqual(n1._right, 1)
        self.assertEqual(n2._left, 2)
        self.assertEqual(n2._right, 3)
        n3 = NSMTestModel.objects.create(num=3)
        self.assertEqual(n1._left, 0)
        self.assertEqual(n1._right, 1)
        self.assertEqual(n2._left, 2)
        self.assertEqual(n2._right, 3)
        self.assertEqual(n3._left, 4)
        self.assertEqual(n3._right, 5)
        n1.set_parent(n2)
        self.assertEqual(n1._left, 1)
        self.assertEqual(n1._right, 2)
        self.assertEqual(n2._left, 0)
        self.assertEqual(n2._right, 3)
        self.assertEqual(n3._left, 4)
        self.assertEqual(n3._right, 5)
        n2.set_parent(n3)
        self.assertEqual(n1._left, 2)
        self.assertEqual(n1._right, 3)
        self.assertEqual(n2._left, 1)
        self.assertEqual(n2._right, 4)
        self.assertEqual(n3._left, 0)
        self.assertEqual(n3._right, 5)
